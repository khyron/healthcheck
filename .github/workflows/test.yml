
name: Java CI with Spring Boot, Selenium and JMeter

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      selenium:
        image: seleniarm/standalone-chromium
        ports:
          - 4444:4444

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn clean install

    - name: Run Unit Tests
      run: mvn test

    - name: Run Spring Boot (host mode)
      run: java -Dserver.port=8080 -Dserver.address=0.0.0.0 -jar target/healthtrack-1.0.0.jar &     
    - name: Wait for backend to be ready
      run: |
        echo "Waiting for localhost:8080..."
        for i in {1..30}; do
          nc -z localhost 8080 && echo "Backend is up!" && break
          echo "Waiting..."
          sleep 2
        done
    - name: Install JMeter
      run: |
        wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.5.tgz
        tar -xzf apache-jmeter-5.5.tgz
    - name: Detect docker host IP
      run: |
        echo "::set-output name=bridge_ip::$(/sbin/ip route|awk '/default/ { print $3 }')"
      id: detect

    - name: Run Selenium Test with dynamic host
      run: |
        echo "Detected host IP: ${{ steps.detect.outputs.bridge_ip }}"
        sed -i "s|localhost:8080|${{ steps.detect.outputs.bridge_ip }}:8080|g" src/test/java/com/healthtrack/SeleniumTest.java
        mvn -Dtest=com.healthtrack.SeleniumTest test

    - name: Run JMeter test
      run: apache-jmeter-5.5/bin/jmeter -n -t jmeter/healthtrack_test.jmx -l jmeter/results.jtl

    - name: SonarQube Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn sonar:sonar -Dsonar.projectKey=healthtrack -Dsonar.host.url=https://your-sonarqube-instance.com
