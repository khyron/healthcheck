name: Java CI with Spring Boot, Selenium and JMeter

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - name: Install dependencies for headless testing
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip xvfb libxi6 libnss3 libx11-xcb1 libxcomposite1 libxdamage1 libxtst6 libatk1.0-0 libgtk-3-0

    - name: Download Chrome for Testing
      run: |
        wget https://storage.googleapis.com/chrome-for-testing-public/138.0.7204.92/linux64/chrome-linux64.zip
        unzip chrome-linux64.zip

    - name: Download ChromeDriver for Testing
      run: |
        wget https://storage.googleapis.com/chrome-for-testing-public/138.0.7204.92/linux64/chromedriver-linux64.zip
        unzip chromedriver-linux64.zip
        sudo mv chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
        sudo chmod +x /usr/local/bin/chromedriver

    - name: Export Chrome binary path for Selenium
      run: echo "CHROME_BIN=$(pwd)/chrome-for-testing/chrome-linux64/chrome" >> $GITHUB_ENV


    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn clean install

    - name: Run Spring Boot in background
      run: |
        java -Dserver.port=8080 -Dserver.address=0.0.0.0 -jar target/healthtrack-1.0.0.jar &
        echo $! > springboot.pid

    - name: Wait for Spring Boot to be ready
      run: |
        for i in {1..30}; do
          if nc -z localhost 8080; then
            echo "Backend is up!"
            break
          fi
          echo "Waiting for backend..."
          sleep 2
        done

    - name: Run Selenium Test
      env:
        BASE_URL: http://localhost:8080
        CHROME_BINARY: ${{ github.workspace }}/chrome-for-testing/chrome-linux64/chrome
      run: xvfb-run --auto-servernum --server-args='-screen 0 1024x768x24' mvn -Dorg.slf4j.simpleLogger.log.org.apache.hc.client5.http.wire=WARN -Dtest=com.healthtrack.SeleniumTest test


    - name: Install JMeter
      run: |
        wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.5.tgz
        tar -xzf apache-jmeter-5.5.tgz

    - name: Run JMeter Test
      run: apache-jmeter-5.5/bin/jmeter -n -t jmeter/healthtrack_test.jmx -l jmeter/results.jtl

    - name: SonarQube Scan
      if: success()
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn sonar:sonar -Dsonar.projectKey=healthtrack -Dsonar.host.url=https://your-sonarqube-instance.com
